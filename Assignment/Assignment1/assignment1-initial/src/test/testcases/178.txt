
            func atom_val(string atom)
            begin
                if (atom = "H") return 1
                elif (atom = "He") return 2
                elif (atom = "Li") return 3
                elif (atom = "Be") return 4
                elif (atom = "B") return 5
                elif (atom = "C") return 6
                elif (atom = "N") return 7
                elif (atom = "O") return 8
                elif (atom = "F") return 9
                elif (atom = "Ne") return 10
                elif (atom = "Na") return 11
                elif (atom = "Mg") return 12
                elif (atom = "Al") return 13
                elif (atom = "Si") return 14
                elif (atom = "P") return 15
                elif (atom = "S") return 16
                elif (atom = "Cl") return 17
                elif (atom = "Ar") return 18
                elif (atom = "K") return 19
                elif (atom = "Ca") return 20
                elif (atom = "Sc") return 21
                elif (atom = "Ti") return 22
                elif (atom = "V") return 23
                elif (atom = "Cr") return 24
                elif (atom = "Mn") return 25
                elif (atom = "Fe") return 26
                elif (atom = "Co") return 27
                elif (atom = "Ni") return 28
                elif (atom = "Cu") return 29
                elif (atom = "Zn") return 30
                elif (atom = "Ga") return 31
                elif (atom = "Ge") return 32
                elif (atom = "As") return 33
                elif (atom = "Se") return 34
                elif (atom = "Br") return 35
                elif (atom = "Kr") return 36
                elif (atom = "Rb") return 37
                elif (atom = "Sr") return 38
                elif (atom = "Y") return 39
                elif (atom = "Zr") return 40
                elif (atom = "Nb") return 41
                elif (atom = "Mo") return 42
                elif (atom = "Tc") return 43
                elif (atom = "Ru") return 44
                elif (atom = "Rh") return 45
                elif (atom = "Pd") return 46
                elif (atom = "Ag") return 47
                elif (atom = "Cd") return 48
                elif (atom = "In") return 49
                elif (atom = "Sn") return 50
                elif (atom = "Sb") return 51
                elif (atom = "Te") return 52
                elif (atom = "I") return 53
                elif (atom = "Xe") return 54
                elif (atom = "Cs") return 55
                elif (atom = "Ba") return 56
                elif (atom = "La") return 57
                elif (atom = "Ce") return 58
                elif (atom = "Pr") return 59
                elif (atom = "Nd") return 60
                elif (atom = "Pm") return 61
                elif (atom = "Sm") return 62
                elif (atom = "Eu") return 63
                elif (atom = "Gd") return 64
                elif (atom = "Tb") return 65
                elif (atom = "Dy") return 66
                elif (atom = "Ho") return 67
                elif (atom = "Er") return 68
                elif (atom = "Tm") return 69
                elif (atom = "Yb") return 70
                elif (atom = "Lu") return 71
                elif (atom = "Hf") return 72
                elif (atom = "Ta") return 73
                elif (atom = "W") return 74
                elif (atom = "Re") return 75
                elif (atom = "Os") return 76
                elif (atom = "Ir") return 77
                elif (atom = "Pt") return 78
                elif (atom = "Au") return 79
                elif (atom = "Hg") return 80
                elif (atom = "Tl") return 81
                elif (atom = "Pb") return 82
                elif (atom = "Bi") return 83
                elif (atom = "Po") return 84
                elif (atom = "At") return 85
                elif (atom = "Rn") return 86
                elif (atom = "Fr") return 87
                elif (atom = "Ra") return 88
                elif (atom = "Ac") return 89
                elif (atom = "Th") return 90
                elif (atom = "Pa") return 91
                elif (atom = "U") return 92
                elif (atom = "Np") return 93
                elif (atom = "Pu") return 94
                elif (atom = "Am") return 95
                elif (atom = "Cm") return 96
                elif (atom = "Bk") return 97
                elif (atom = "Cf") return 98
                elif (atom = "Es") return 99
                elif (atom = "Fm") return 100
                elif (atom = "Md") return 101
                elif (atom = "No") return 102
                elif (atom = "Lr") return 103
                elif (atom = "Rf") return 104
                elif (atom = "Db") return 105
                elif (atom = "Sg") return 106
                elif (atom = "Bh") return 107
                elif (atom = "Hs") return 108
                elif (atom = "Mt") return 109
                elif (atom = "Ds") return 110
                elif (atom = "Rg") return 111
                elif (atom = "Cn") return 112
                elif (atom = "Nh") return 113
                elif (atom = "Fl") return 114
                elif (atom = "Mc") return 115
                elif (atom = "Lv") return 116
                elif (atom = "Ts") return 117
                elif (atom = "Og") return 118
                else return 0
            end

            func calc_PTK(string formula)
            begin
                number PTK <- 0
                number aval
                number idx
                for i until i < len(formula) by 1
                begin
                    if (isUpper(formula[i]))
                    begin
                        var atom <- formula[i]
                        if (i + 1 < len(formula) and isLower(formula[i + 1]))
                        begin
                            atom <- atom + formula[i + 1]
                            i <- i + 1
                        end
                        aval <- atom_val(atom)
                        if (aval = 0) return 0
                    end
                    else if (isDigit(formula[i]))
                    begin
                        idx <- 0
                        for i until (i < len(formula) and isDigit(formula[i])) by 1
                        begin
                            idx <- idx * 10 + (formula[i] - "0")
                            i <- i + 1
                        end
                        if (idx = 0) return 0
                        else PTK <- PTK + aval * idx
                    end
                end
                return PTK
            end

            func main()
            begin
                string formula <- readString()
                print(calc_PTK(formula))
            end
        