    def visitFor(self,ctx,o):
        code,typ = self.visit(ctx.init_expr,Access(o.frame,o.sym,False))
        self.emit.printout(code)
        code,typ = self.visit(ctx.idxvar, Access(o.frame,o.sym,True))
        self.emit.printout(code)
        code,typ = self.visit(ctx.end_expr,Access(o.frame,o.sym,False))
        self.emit.printout(code)
        loopLabel = o.frame.getNewLabel()
        o.frame.enterLoop()
        con = o.frame.getContinueLabel()
        brk = o.frame.getBreakLabel()
        self.emit.printout(self.emit.emitLABEL(loopLabel,o.frame))
        self.emit.printout(self.emit.emitDUP(o.frame))
        code,typ = self.visit(ctx.idxvar,Access(o.frame,o.sym,False))
        self.emit.printout(code)
        self.emit.printout(self.emit.emitREOP('>',IntType(),o.frame))
        self.emit.printout(self.emit.emitIFFALSE(brk,o.frame))
        self.visit(ctx.stmt1,o)
        self.emit.printout(self.emit.emitLABEL(con,o.frame))
        code,typ = self.visit(ctx.update_expr,Access(o.frame,o.sym,False))
        self.emit.printout(code)
        code,typ = self.visit(ctx.idxvar,Access(o.frame,o.sym,False))
        self.emit.printout(code)
        self.emit.printout(self.emit.emitADDOP('+',IntType(),o.frame))
        code,typ = self.visit(ctx.idxvar,Access(o.frame,o.sym,True))
        self.emit.printout(code)
        self.emit.printout(self.emit.emitGOTO(loopLabel,o.frame))
        self.emit.printout(self.emit.emitLABEL(brk,o.frame))
        o.frame.exitLoop()
        self.emit.printout(self.emit.emitPOP(o.frame))
        
        